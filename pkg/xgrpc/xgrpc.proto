syntax = "proto3";

package xgrpc;
option go_package = "../xgrpc";

message String {
  string value = 1;
}

message ID {
  int64 id = 1;
}

message Ticket {
  int64 id = 1;
  int64 time = 2;
  int64 owner = 3;
  int64 side = 4;
  int64 type = 5;
  string price = 6;
  string quantity = 7;
  int64 feeRate = 8;
}

message BalanceChange {
  string reason = 1;
  string reasonTable = 2;
  int64 reasonID = 3;

  int64 owner = 4;
  string freeChange = 5;
  string freezeChange = 6;

  int64 owner2 = 7;
  string freeChange2 = 8;
  string freezeChange2 = 9;

  int64 reasonIDFirst = 10;
}

service BankService {
  // ome 向 bank 发起请求，根据最新 id，通过流持续获取新 ticket
  rpc Tickets(ID) returns (stream Ticket);

  // ome 向 bank 发起请求，每次 bank 发送 id 过来，ome 根据 id 推送后续的请求
  rpc BalanceChanges(stream BalanceChange) returns (stream ID);
}
